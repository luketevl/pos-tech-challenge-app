generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categorias {
  id       String     @id @default(dbgenerated("extensions.uuid_generate_v1()")) @db.Uuid
  nome     String     @db.VarChar
  produtos produtos[]
}

model clientes {
  id       String    @id @default(dbgenerated("extensions.uuid_generate_v1()")) @db.Uuid
  cpf      String    @db.VarChar
  nome     String?   @db.VarChar
  email    String?   @db.VarChar
  telefone String?   @db.VarChar
  pedidos  pedidos[]
}

model pedido_items {
  id         String   @id @default(dbgenerated("extensions.uuid_generate_v1()")) @db.Uuid
  id_produto String   @db.Uuid
  id_pedido  String   @db.Uuid
  quantidade Float
  pedidos    pedidos  @relation(fields: [id_pedido], references: [id], onDelete: Cascade, onUpdate: NoAction)
  produtos   produtos @relation(fields: [id_produto], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model pedidos {
  id           String         @id @default(dbgenerated("extensions.uuid_generate_v1()")) @db.Uuid
  data_criacao DateTime?      @default(now()) @db.Timestamptz(6)
  status       String         @default("C") @db.VarChar
  id_cliente   String         @db.Uuid
  pedido_items pedido_items[]
  clientes     clientes       @relation(fields: [id_cliente], references: [id], onDelete: SetNull, onUpdate: NoAction)
}

model produtos {
  id           String         @id @default(dbgenerated("extensions.uuid_generate_v1()")) @db.Uuid
  nome         String         @db.VarChar
  descricao    String?
  preco        Float
  imagens      String?
  id_categoria String?        @db.Uuid
  pedido_items pedido_items[]
  categorias   categorias?    @relation(fields: [id_categoria], references: [id], onUpdate: NoAction)
}
